<style>
  body,
  html {
    height: 100%;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f0f0f0;
  }

  .card {
    width: 100%;
    height:
      500px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>
<div class="container p-0">
  <div class="card px-4">
    {{#if admin}}
    <p class="h3 fs-1 header-font fw-bold py-3 text-center mt-3">
      Withdrawal Confirmation
    </p>
    {{else}}
    <p class="h3 fs-1 header-font fw-bold py-3 text-center mt-3">
      Payment Confirmation
    </p>
    {{/if}}
    <h4>Total:
      <span id="payAmount" class="text-success">
        $
      </span>
    </h4>
    <form id="rechargeForm">
      <div class="row gx-3">
        <div class="col-12">
          <div class="d-flex flex-column">
            <p class="text mb-1">
              Cardholder Name*
            </p>
            <input class="form-control mb-3 text-uppercase" type="text" name="cardholderName" placeholder="Name"
              disabled value="{{balance.cardholderName}}" />
          </div>
        </div>
        <div class="col-12">
          <div class="d-flex flex-column">
            <p class="text mb-1">
              Card Number*
            </p>
            <input class="form-control mb-3" type="text" placeholder="1234 5678 435678" maxlength="16" name="cardNumber"
              disabled value="{{balance.cardNumber}}" />
          </div>
        </div>
        <div class="col-6">
          <div class="d-flex flex-column">
            <p class="text mb-1">
              Expires*
            </p>
            <input class="form-control mb-3" type="month" placeholder="MM/YY" maxlength="5" name="expires" disabled
              value="{{balance.expires}}" />
          </div>
        </div>
        <div class="col-6">
          <div class="d-flex flex-column">
            <p class="text mb-1">
              CVV2/CVC2/CAV2*
            </p>
            <input class="form-control mb-3 pt-2" type="password" placeholder="***" maxlength="3" name="cvv" disabled
              value="{{balance.cvv}}" />
          </div>
        </div>
        <div class="col-12 mt-3">
          <div class="float-end">
            <a href="/">
              <div class="btn btn-outline-danger mb-3">
                <span>
                  Cancel
                </span>
              </div>
            </a>
            <button class="btn btn-primary mb-3" type="submit">
              {{#if admin}}
              <span>
                Withdraw now
              </span>
              {{else}}
              <span>
                Pay now
              </span>
              {{/if}}
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const urlParams = new URLSearchParams(window.location.search);
    const amount = urlParams.get('amount');
    const curUrl = window.location.href;
    const regex = /\/balance\/([^/]+)\//;
    const match = curUrl.match(regex);
    let userId;
    if (match && match[1]) {
      userId = match[1];
    }
    const admin = "{{admin}}"
    const payAmount = document.getElementById('payAmount');
    payAmount.textContent = `$${amount}.00`;

    const form = document.getElementById('rechargeForm');
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      if (validateForm()) {
        const formData = new FormData(form);
        if (admin === "true") {
          formData.append('amount', amount * -1);
        } else {
          formData.append('amount', amount);
        }

        const data = {};
        formData.forEach((value, key) => {
          data[key] = value;
        });

        fetch(`/balance/${userId}/recharge`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        })
          .then(async (res) => {
            const data = await res.json();
            if (data.success) {
              alert(data.message);
              window.location.href = "/";
            } else {
              throw new Error(data.message)
            }
          })
          .catch((err) => {
            console.error(err.message);
            alert(err.message);
          });
      }
    });

    function validateForm() {
      const cardholderName = form.elements['cardholderName'].value;
      const cardNumber = form.elements['cardNumber'].value;
      const expires = form.elements['expires'].value;
      const cvv = form.elements['cvv'].value;

      if (cardholderName.trim() === '' || cardNumber.trim() === '' || expires.trim() === '' || cvv.trim() === '') {
        alert('Please fill in all fields');
        return false;
      }

      // Example: Ensure the cardholder name contains only alphabets and spaces
      if (!/^[a-zA-Z\s]+$/.test(cardholderName)) {
        alert('Cardholder Name should contain only alphabets and spaces');
        return false;
      }

      if (!/^\d{16}$/.test(cardNumber)) {
        alert('Please enter a valid 16-digit Card Number');
        return false;
      }

      if (!/^\d{3}$/.test(cvv)) {
        alert('Please enter a valid 3-digit CVV');
        return false;
      }

      return true;
    }
  });
</script>